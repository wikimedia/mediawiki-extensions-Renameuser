{
  "comments": [
    {
      "key": {
        "uuid": "8fb741d0_3dc31f9c",
        "filename": "includes/RenameuserSQL.php",
        "patchSetId": 1
      },
      "lineNbr": 152,
      "author": {
        "id": 16
      },
      "writtenOn": "2019-02-20T00:39:27Z",
      "side": 1,
      "message": "Don\u0027t image upload create description pages (even blank) these days? The count doesn\u0027t go down either, so deletions don\u0027t matter. I doubt the oldimage is worth counting itself as someone would have to keep re-uploading the same image.\n\nSo maybe the counts can be skipped here?",
      "revId": "da9c6cd1722b53b0a49b0d6a070f5d628bf29ba0",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1859b8f4_a94699d5",
        "filename": "includes/RenameuserSQL.php",
        "patchSetId": 1
      },
      "lineNbr": 152,
      "author": {
        "id": 389
      },
      "writtenOn": "2019-02-20T01:19:58Z",
      "side": 1,
      "message": "Yeah, we could use editcount for this as well. It would affect way more users (plenty of people have more than 500 edits but less than 500 uploads), not sure if that\u0027s worth worrying about (not sure why we have the editcount check here instead of just always using jobs, TBH). Soon all this will be made unnecessary by the actor migration, anyway.\n\nOldimage is the total number of non-current file versions the user has uploaded, not a single image.",
      "parentUuid": "8fb741d0_3dc31f9c",
      "revId": "da9c6cd1722b53b0a49b0d6a070f5d628bf29ba0",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a015732_7dca9e90",
        "filename": "includes/RenameuserSQL.php",
        "patchSetId": 1
      },
      "lineNbr": 152,
      "author": {
        "id": 16
      },
      "writtenOn": "2019-02-20T02:34:55Z",
      "side": 1,
      "message": "Yes, but I meant that those are reflected in editcount as well and even \u0027image\u0027 alone would normally be good enough since the user\u0027s file uploads would probably not be spread across only a few images if they made tens of thousands of file uploads (e.g. many re-uploads of the same image is unlikely). I was thinking of Pigeonhole Principle.",
      "parentUuid": "1859b8f4_a94699d5",
      "revId": "da9c6cd1722b53b0a49b0d6a070f5d628bf29ba0",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "77716cf9_4dc72cb7",
        "filename": "includes/RenameuserSQL.php",
        "patchSetId": 1
      },
      "lineNbr": 152,
      "author": {
        "id": 389
      },
      "writtenOn": "2019-02-20T03:05:22Z",
      "side": 1,
      "message": "Well, it is unlikely but if it happens it would break renames again. I\u0027d rather err on the side of using jobs when I don\u0027t have to.\n\nEditcounts are a reasonable approach if you think the exact queries are not worth the effort. Although the code here is not performance-sensitive and the exact logic is simple enough to be worth keeping IMO.\n\n(It would probably make more sense to unify tables/tablesJob and do this kind of \"select count() ... limit\" query automatically and use direct query or job based on that. But all this will go away when actor migration is done so not worth the effort.)",
      "parentUuid": "1a015732_7dca9e90",
      "revId": "da9c6cd1722b53b0a49b0d6a070f5d628bf29ba0",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}